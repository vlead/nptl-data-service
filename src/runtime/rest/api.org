#+TITLE: The REST API
#+AUTHOR: VLEAD
#+DATE: [2016-07-26 Tue]
#+SETUPFILE: ../../org-templates/level-2.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction 
  This document illustrates building of the REST API.

  
* REST
  
** Fetch NPTEL URLs for a given keyword
   REST API to do do the above

*** Function to find the number of Word occurrences.
    - The function will take the string data as input and will output the
      number of occurrences of a keyword in it.
#+NAME: find_word_occurences
#+BEGIN_SRC python
def findWordOccurence(mainStr, word, posList):
    index = 0
    while index < len(mainStr):
        index = mainStr.find(word, index)
        if index == -1:
            break
	posList.append(index)
	index += len(word)
#+END_SRC

*** Outputs the string containing the keyword
    - This will take the long content string as input and will output the
      NPTEL url's containing the keyword searched

#+NAME: get_coma_pos
#+BEGIN_SRC python
def getComaPos(mainStr, wordPosList):
    start = mainStr.find('[', wordPosList)
    end = mainStr.find(']', start)
    linkStr = mainStr[start : end]
    return linkStr
#+END_SRC

*** This is the main loop.
    - This is the main logic of the keyword search, which will output the NOTEL
      url's when asked for by the user.

#+NAME: main
#+BEGIN_SRC python
def main(KeyWord):
    global appendedList
    global comaPos
    global KeywordPos
    appendedList = ""
    KeywordPos = []
    comaPos = []
    appendedList = "{\n" + "\"" + KeyWord + "\"" + ": "
    filepath = "/home/pulkit/Desktop/VLABS_Docs/nptl-data-service/build/code/runtime/config/database.json"
    myFile = codecs.open(filepath, "r", 'utf-8')
    contents = myFile.read()
    findWordOccurence(contents, KeyWord, KeywordPos)
    KeywordPos.append(len(contents))
    for x in range(0, len(KeywordPos) - 1):
        linkStr = getComaPos(contents, KeywordPos[x])
        appendedList = appendedList + linkStr + "]"
        if x < len(KeywordPos) - 2:
            appendedList = appendedList + ", " + "\n"
    appendedList = appendedList + "\n}"
    return appendedList
#+END_SRC


*** Function to take query from the user
    - User can input the keyword for search and will get the url as the output

#+NAME: get_nptel_urls_for_keyword
#+BEGIN_SRC python
@api.route("/search")
def get_nptel_urls():
    key = request.args['key']
    nptel_url = main(key)
    return jsonify(results = nptel_url)

#+END_SRC


* Infra                                                         :boilerplate:

** sources
*** Imports 
#+name: imports_for_sources
#+BEGIN_SRC python
# -*- coding: utf-8 -*-
import requests
import json
from flask import session, render_template, Blueprint, request, \
     jsonify, abort, current_app, redirect, url_for
from flask import Flask
from runtime.config.flask_app_config import GENERIC_FEEDBACK_VERSION,\
     GENERIC_LAB_FEEDBACK_VERSION, GENERIC_EXP_FEEDBACK_VERSION, ELASTIC_DB_URL
import codecs
import yaml
api = Blueprint('APIs', __name__)

KeywordPos = []
comaPos = []
appendedList = ""

#+end_src


* Tangle                                                        :boilerplate:

** sources
#+BEGIN_SRC python :tangle api.py :eval no :noweb yes
<<imports_for_sources>>
<<find_word_occurences>>
<<get_coma_pos>>
<<main>>
<<get_nptel_urls_for_keyword>>
#+END_SRC

